version: "3.9"
services:
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.local
  #   restart: always
  #   env_file: .env
  #   ports:
  #     - "${FRONTEND_PORT}:${FRONTEND_PORT}"
  #   volumes:
  #     - "./frontend/src:/usr/src/app/src"
  #   networks:
  #     - bp-network
  #   command: "npm start"
  backend:
      container_name: backend
      build:
        context: ./backend
        dockerfile: Dockerfile.local
      restart: always
      env_file: .env
      volumes:
        - ./backend:/svr/app
        - /svr/app/node_modules
      networks:
        - bp-network
      ports:
        - "${BACKEND_PORT}:${BACKEND_PORT}"
      depends_on:
        - postgres-db
      links:
        - postgres-db
  postgres-db:
      container_name: postgres-db
      image: postgres:15.2-alpine
      restart: always
      env_file: 
        - .env
      environment:
        POSTGRES_DB: ${POSTGRES_DATABASE}
        POSTGRES_USER: ${POSTGRES_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      volumes:
        - ./backend/storage/db:/data/db
      ports: 
        - ${POSTGRES_PORT}:${POSTGRES_PORT}
      networks:
        - bp-network
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin4_container
      restart: always
      ports:
        - "${PGADMIN_PORT}:80"
      env_file:
        - .env
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      volumes:
        - ./backend/storage/pgadmin-data:/var/lib/pgadmin
      networks:
        - bp-network
networks:
  bp-network:
    driver: bridge